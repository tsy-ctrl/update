name: Build Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller requests datetime pytz tqdm

      - name: Prepare source with token
        shell: pwsh
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          $content = Get-Content -Path update.py -Raw
          $escapedToken = $env:TOKEN -replace '\\', '\\' -replace '"', '\"'
          $content = $content -replace 'GITHUB_TOKEN_PLACEHOLDER', $escapedToken
          Set-Content -Path update.py -Value $content -Encoding utf8

          Write-Host "Verifying token replacement:"
          Get-Content -Path update.py | Select-String 'GITHUB_TOKEN ='

      - name: Clean PyInstaller cache
        run: |
          if (Test-Path .\__pycache__) { Remove-Item .\__pycache__ -Recurse -Force }
          if (Test-Path update.spec) { Remove-Item update.spec -Force }

      - name: Build executable
        run: |
          pyinstaller --onefile --clean update.py

      - name: Upload Windows executable
        uses: actions/upload-artifact@v4
        with:
          name: update-windows
          path: dist/

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller requests datetime pytz tqdm

      - name: Prepare source with token
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          escaped_token=$(echo "$TOKEN" | sed 's/[\/&]/\\&/g')
          sed -i.bak "s/GITHUB_TOKEN_PLACEHOLDER/$escaped_token/g" update.py

          echo "Verifying token replacement in file:"
          echo "Found token starts with: $(grep -o 'GITHUB_TOKEN = "[^"]*"' update.py | cut -d'"' -f2 | cut -c1-10)..."
          echo "File content preview:"
          head -n 20 update.py

      - name: Clean PyInstaller cache
        run: |
          if [ -d "__pycache__" ]; then rm -rf __pycache__; fi
          if [ -f "update.spec" ]; then rm update.spec; fi

      - name: Build executable
        run: |
          pyinstaller --onefile --clean update.py

      - name: Upload macOS executable
        uses: actions/upload-artifact@v4
        with:
          name: update-macos
          path: dist/
